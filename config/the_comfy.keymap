// This file was generated from a template. Edit it to match your keyboard. test test
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "hold-preferred";
    bindings = <&kp>, <&kp>;

    tapping-term-ms = <250>;
    quick-tap-ms = <150>;
    require-prior-idle-ms = <125>;
};

&lt {
    quick-tap-ms = <200>;
    tapping-term-ms = <250>;
};

/ {
    // Define a default keymap here.
    // See https://zmk.dev/docs/development/hardware-integration/new-shield#default-keymap.

    combos {
        compatible = "zmk,combos";

        ae {
            bindings = <&kp DE_A_UMLAUT>;
            key-positions = <11 18>;
            layers = <0>;
            timeout-ms = <60>;
        };

        ue {
            bindings = <&kp DE_U_UMLAUT>;
            key-positions = <18 7>;
            timeout-ms = <60>;
            layers = <0>;
        };

        oe {
            bindings = <&kp DE_O_UMLAUT>;
            key-positions = <18 20>;
        };

        boot {
            bindings = <&bootloader>;
            key-positions = <22 33 4 5>;
            require-prior-idle-ms = <500>;
        };

        screenshot {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <27 26>;
        };

        to_col {
            bindings = <&to 0>;
            key-positions = <22 33>;
            layers = <2>;
            require-prior-idle-ms = <500>;
        };

        to_qwe {
            bindings = <&to 2>;
            key-positions = <22 33>;
            layers = <0>;
            require-prior-idle-ms = <500>;
        };

        sz {
            bindings = <&kp DE_SZ>;
            key-positions = <13 18>;
        };

        num_combo_2 {
            bindings = <&mo 3>;
            key-positions = <18 30>;
            layers = <0>;
            require-prior-idle-ms = <100>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 16 17 18 28 29 30 8 9 19 20 21 31 32 33>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27>;
            hold-trigger-on-release;
        };

        back_del: back_del {
            compatible = "zmk,behavior-tap-dance";
            label = "BACK_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;
        };

        to_col: to_col {
            compatible = "zmk,behavior-tap-dance";
            label = "TO_COL";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp TAB>, <&to 0>;
        };

        to_qwe: to_qwe {
            compatible = "zmk,behavior-tap-dance";
            label = "TO_QWE";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp TAB>, <&to 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        COL {
            display-name = "COL";
            bindings = <
              &kp DE_Q         &kp W               &kp F               &kp P                 &kp B                      &kp J           &kp L                 &kp U               &kp DE_Y             &lt 2 TAB
&lt 4 ESCAPE  &hml LCTRL DE_A  &hml LEFT_ALT DE_R  &hml LEFT_GUI DE_S  &hml LEFT_SHIFT DE_T  &kp G                      &kp M           &hmr LEFT_SHIFT DE_N  &hmr LEFT_GUI DE_E  &hmr RIGHT_ALT DE_I  &hmr LCTRL DE_O  &lt 4 ENTER
&lt 3 BSPC    &kp DE_Z         &kp DE_X            &lt 3 DE_C          &lt 4 DE_D            &kp V                      &kp K           &lt 4 DE_H            &lt 3 DE_COMMA      &kp DE_DOT           &kp DE_MINUS     &lt 2 DELETE
                               &kp LG(DE_N1)       &kp LG(DE_N2)       &mo 1                 &kp SPACE  &mo 5    &mo 4  &kp LEFT_SHIFT  &mo 1                 &kp LG(DE_N2)       &kp LG(DE_N3)
            >;
        };

        MOD {
            bindings = <
        &trans     &trans    &trans    &trans     &trans                    &trans  &trans     &trans    &trans    &trans
&trans  &sk LCTRL  &sk LALT  &sk LGUI  &sk LSHFT  &trans                    &trans  &sk LSHFT  &sk LGUI  &sk LALT  &sk LCTRL  &trans
&trans  &trans     &trans    &trans    &trans     &trans                    &trans  &trans     &trans    &trans    &trans     &trans
                   &trans    &trans    &trans     &trans  &trans    &trans  &trans  &trans     &trans    &trans
            >;
        };

        QWE {
            display-name = "QWE";
            bindings = <
        &kp DE_Q         &kp W               &kp E               &kp R                 &kp T                     &kp DE_Y  &kp U                  &kp I               &kp O                &kp DE_SZ
&trans  &hml LCTRL DE_A  &hml LEFT_ALT DE_S  &hml LEFT_GUI DE_D  &hml LEFT_SHIFT DE_F  &kp G                     &kp H     &hmr RIGHT_SHIFT DE_J  &hmr LEFT_GUI DE_K  &hmr RIGHT_ALT DE_L  &hmr RCTRL DE_P  &trans
&trans  &kp DE_Z         &kp DE_X            &kp DE_C            &kp DE_V              &kp B                     &kp N     &kp DE_M               &kp DE_COMMA        &kp DE_DOT           &kp DE_MINUS     &trans
                         &trans              &trans              &trans                &trans  &trans    &trans  &trans    &trans                 &trans              &trans
            >;
        };

        NUM {
            bindings = <
        &kp DE_LEFT_PARENTHESIS  &kp N7  &kp N8  &kp N9  &kp DE_RIGHT_PARENTHESIS                    &trans     &trans          &kp DE_ASTERISK  &trans            &trans
&trans  &kp N0                   &kp N4  &kp N5  &kp N6  &kp DE_PLUS                                 &kp DE_LT  &sk LEFT_SHIFT  &sk LEFT_GUI     &sk LEFT_ALT      &sk LCTRL     &trans
&trans  &trans                   &kp N1  &kp N2  &kp N3  &kp DE_EQUAL                                &kp DE_GT  &kp DE_FSLH     &kp DE_COMMA     &kp DE_BACKSLASH  &kp DE_MINUS  &trans
                                 &trans  &trans  &trans  &trans                    &trans    &trans  &trans     &trans          &trans           &trans
            >;

            label = "NUM";
        };

        SYM {
            bindings = <
        &kp DQT          &kp AT               &kp DE_HASH              &kp DE_DOLLAR      &kp DE_PERCENT                       &kp DE_CARET      &kp DE_AMPS   &kp DE_ASTERISK  &kp DE_GRAVE  &kp DE_SQT
&trans  &kp DE_EXCL      &kp DE_LEFT_BRACKET  &kp DE_LEFT_PARENTHESIS  &kp DE_LEFT_BRACE  &kp DE_PLUS                          &kp DE_LESS_THAN  &sk LSHFT     &sk LEFT_GUI     &sk LEFT_ALT  &sk LCTRL     &trans
&trans  &kp DE_QUESTION  &kp DE_RBKT          &kp DE_RPAR              &kp DE_RBRC        &kp DE_EQUAL                         &kp GT            &kp DE_SLASH  &kp DE_PIPE      &kp DE_BSLH   &kp DE_MINUS  &trans
                         &trans               &trans                   &trans             &kp DE_UNDERSCORE  &trans    &trans  &trans            &trans        &trans           &trans
            >;
        };

        NAV {
            bindings = <
        &kp N1      &kp N2         &kp N3         &kp N4     &kp N5                         &kp HOME        &kp PG_DN          &kp PG_UP             &kp END           &trans
&trans  &sk LCTRL   &sk LEFT_ALT   &sk LEFT_GUI   &sk LSHFT  &kp TAB                        &kp LEFT_ARROW  &kp DOWN           &kp UP                &kp RIGHT         &kp BSPC  &trans
&trans  &kp ESCAPE  &trans         &trans         &kp ENTER  &key_repeat                    &kp LG(DE_SZ)   &kp LS(LG(DE_SZ))  &kp LS(LG(DE_ACUTE))  &kp LG(DE_ACUTE)  &kp DEL   &trans
                    &kp LG(DE_N4)  &kp LG(DE_N5)  &trans     &trans       &trans    &trans  &kp ENTER       &trans             &kp LG(DE_N5)         &kp LG(DE_N6)
            >;

            label = "NAV";
        };
    };
};
